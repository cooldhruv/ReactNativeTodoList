{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"B:\\\\ReactNative\\\\myTodoList\\\\input.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar Inputs = function (_Component) {\n  _inherits(Inputs, _Component);\n\n  var _super = _createSuper(Inputs);\n\n  function Inputs() {\n    var _this;\n\n    _classCallCheck(this, Inputs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      todos: []\n    };\n\n    _this.handleTodo = function (text) {\n      _this.setState({\n        todo: text\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Inputs, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      }, React.createElement(\"text\", {\n        style: styles.heading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 14\n        }\n      }, React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 43\n        }\n      }, \"Track your work\")), React.createElement(TextInput, {\n        style: styles.input,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Email\",\n        placeholderTextColor: \"#9a73ef\",\n        autoCapitalize: \"none\",\n        onChangeText: this.handleEmail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: function onPress() {\n          return _this2.login(_this2.state.email, _this2.state.password);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 16\n        }\n      }, React.createElement(Text, {\n        style: styles.submitButtonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }\n      }, \" Submit \")));\n    }\n  }]);\n\n  return Inputs;\n}(Component);\n\nexport default Inputs;\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 23,\n    fontFamily: 'sansserif'\n  },\n  input: {\n    margin: 15,\n    height: 40,\n    borderColor: '#7a42f4',\n    borderWidth: 1\n  },\n  submitButton: {\n    backgroundColor: '#7a42f4',\n    padding: 10,\n    margin: 15,\n    height: 40\n  },\n  submitButtonText: {\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["B:/ReactNative/myTodoList/input.js"],"names":["React","Component","Inputs","state","todos","handleTodo","text","setState","todo","styles","container","heading","input","handleEmail","submitButton","login","email","password","submitButtonText","StyleSheet","create","paddingTop","fontFamily","margin","height","borderColor","borderWidth","backgroundColor","padding","color"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;IAGMC,M;;;;;;;;;;;;;;;UACFC,K,GAAM;AACFC,MAAAA,KAAK,EAAE;AADL,K;;UAINC,U,GAAa,UAACC,IAAD,EAAU;AACrB,YAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEF;AAAR,OAAd;AACF,K;;;;;;;6BAEQ;AAAA;;AACJ,aACK,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIG,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA7B,CADA,EAED,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAIF,MAAM,CAACG,KAA3B;AACG,QAAA,qBAAqB,EAAG,aAD3B;AAEG,QAAA,WAAW,EAAG,OAFjB;AAGG,QAAA,oBAAoB,EAAG,SAH1B;AAIG,QAAA,cAAc,EAAG,MAJpB;AAKG,QAAA,YAAY,EAAI,KAAKC,WALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFC,EASE,oBAAC,gBAAD;AACA,QAAA,KAAK,EAAIJ,MAAM,CAACK,YADhB;AAEA,QAAA,OAAO,EACJ;AAAA,iBAAM,MAAI,CAACC,KAAL,CAAW,MAAI,CAACZ,KAAL,CAAWa,KAAtB,EAA6B,MAAI,CAACb,KAAL,CAAWc,QAAxC,CAAN;AAAA,SAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKA,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAIR,MAAM,CAACS,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALA,CATF,CADL;AAmBH;;;;EA7BgBjB,S;;AAgCrB,eAAeC,MAAf;AAEA,IAAMO,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC9BV,EAAAA,SAAS,EAAE;AACRW,IAAAA,UAAU,EAAE,EADJ;AAERC,IAAAA,UAAU,EAAE;AAFJ,GADmB;AAK9BV,EAAAA,KAAK,EAAE;AACJW,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,MAAM,EAAE,EAFJ;AAGJC,IAAAA,WAAW,EAAE,SAHT;AAIJC,IAAAA,WAAW,EAAE;AAJT,GALuB;AAW9BZ,EAAAA,YAAY,EAAE;AACXa,IAAAA,eAAe,EAAE,SADN;AAEXC,IAAAA,OAAO,EAAE,EAFE;AAGXL,IAAAA,MAAM,EAAE,EAHG;AAIXC,IAAAA,MAAM,EAAE;AAJG,GAXgB;AAiB9BN,EAAAA,gBAAgB,EAAC;AACdW,IAAAA,KAAK,EAAE;AADO;AAjBa,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { View, Text, TouchableOpacity, TextInput, StyleSheet } from 'react-native';\r\n\r\nclass Inputs extends Component{\r\n    state={\r\n        todos: []\r\n    };\r\n\r\n    handleTodo = (text) => {\r\n      this.setState({ todo: text })\r\n   }\r\n\r\n    render(){\r\n        return(\r\n             <View style = {styles.container}>\r\n             <text style={styles.heading}><h1>Track your work</h1></text>\r\n            <TextInput style = {styles.input}\r\n               underlineColorAndroid = \"transparent\"\r\n               placeholder = \"Email\"\r\n               placeholderTextColor = \"#9a73ef\"\r\n               autoCapitalize = \"none\"\r\n               onChangeText = {this.handleEmail}/>\r\n\r\n               <TouchableOpacity\r\n               style = {styles.submitButton}\r\n               onPress = {\r\n                  () => this.login(this.state.email, this.state.password)\r\n               }>\r\n               <Text style = {styles.submitButtonText}> Submit </Text>\r\n            </TouchableOpacity>\r\n         </View>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inputs;\r\n\r\nconst styles = StyleSheet.create({\r\n   container: {\r\n      paddingTop: 23,\r\n      fontFamily: 'sansserif'\r\n   },\r\n   input: {\r\n      margin: 15,\r\n      height: 40,\r\n      borderColor: '#7a42f4',\r\n      borderWidth: 1\r\n   },\r\n   submitButton: {\r\n      backgroundColor: '#7a42f4',\r\n      padding: 10,\r\n      margin: 15,\r\n      height: 40,\r\n   },\r\n   submitButtonText:{\r\n      color: 'white'\r\n   }\r\n})"]},"metadata":{},"sourceType":"module"}